## *********************************************************
##
## File autogenerated for the quickmcl package
## by the dynamic_reconfigure package.
## Please do not edit.
##
## ********************************************************/

from dynamic_reconfigure.encoding import extract_params

inf = float('inf')

config_description = {'upper': 'DEFAULT', 'lower': 'groups', 'srcline': 246, 'name': 'Default', 'parent': 0, 'srcfile': '/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'cstate': 'true', 'parentname': 'Default', 'class': 'DEFAULT', 'field': 'default', 'state': True, 'parentclass': '', 'groups': [{'upper': 'MOTION_MODEL', 'lower': 'motion_model', 'srcline': 124, 'name': 'motion_model', 'parent': 0, 'srcfile': '/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'cstate': 'true', 'parentname': 'Default', 'class': 'DEFAULT::MOTION_MODEL', 'field': 'DEFAULT::motion_model', 'state': True, 'parentclass': 'DEFAULT', 'groups': [], 'parameters': [{'srcline': 25, 'description': 'Rotation noise from rotation', 'max': inf, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/home/auv01/catkin_ws/src/quickmcl/cfg/QuickMCL.cfg', 'name': 'motion_model_alpha_1', 'edit_method': '', 'default': 0.05, 'level': 1, 'min': 0.0, 'type': 'double'}, {'srcline': 26, 'description': 'Rotation noise from translation', 'max': inf, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/home/auv01/catkin_ws/src/quickmcl/cfg/QuickMCL.cfg', 'name': 'motion_model_alpha_2', 'edit_method': '', 'default': 0.1, 'level': 1, 'min': 0.0, 'type': 'double'}, {'srcline': 27, 'description': 'Translation noise from translation', 'max': inf, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/home/auv01/catkin_ws/src/quickmcl/cfg/QuickMCL.cfg', 'name': 'motion_model_alpha_3', 'edit_method': '', 'default': 0.02, 'level': 1, 'min': 0.0, 'type': 'double'}, {'srcline': 28, 'description': 'Translation noise from rotation', 'max': inf, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/home/auv01/catkin_ws/src/quickmcl/cfg/QuickMCL.cfg', 'name': 'motion_model_alpha_4', 'edit_method': '', 'default': 0.05, 'level': 1, 'min': 0.0, 'type': 'double'}, {'srcline': 29, 'description': 'Minimum translation for filter to update [m]', 'max': inf, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/home/auv01/catkin_ws/src/quickmcl/cfg/QuickMCL.cfg', 'name': 'motion_model_min_trans', 'edit_method': '', 'default': 0.2, 'level': 1, 'min': 0.0, 'type': 'double'}, {'srcline': 30, 'description': 'Minimum rotation for filter to update [rad]', 'max': 6.283185307179586, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/home/auv01/catkin_ws/src/quickmcl/cfg/QuickMCL.cfg', 'name': 'motion_model_min_rot', 'edit_method': '', 'default': 0.5235987755982988, 'level': 1, 'min': 0.0, 'type': 'double'}], 'type': '', 'id': 1}, {'upper': 'SENSOR_MODEL', 'lower': 'sensor_model', 'srcline': 124, 'name': 'sensor_model', 'parent': 0, 'srcfile': '/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'cstate': 'true', 'parentname': 'Default', 'class': 'DEFAULT::SENSOR_MODEL', 'field': 'DEFAULT::sensor_model', 'state': True, 'parentclass': 'DEFAULT', 'groups': [], 'parameters': [{'srcline': 35, 'description': "Probability weight to assign to 'hit when there is actually something there in the map'.", 'max': 1.0, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/home/auv01/catkin_ws/src/quickmcl/cfg/QuickMCL.cfg', 'name': 'likelihood_z_hit', 'edit_method': '', 'default': 0.9, 'level': 2, 'min': 0.0, 'type': 'double'}, {'srcline': 38, 'description': "Probability weight to assign to 'random hit even when there is nothing there in the map'.", 'max': 1.0, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/home/auv01/catkin_ws/src/quickmcl/cfg/QuickMCL.cfg', 'name': 'likelihood_z_rand', 'edit_method': '', 'default': 0.1, 'level': 2, 'min': 0.0, 'type': 'double'}, {'srcline': 49, 'description': 'Number of laser beams to use from the scan. This sub-sampling will be done via selecting evenly spaced beams. Set to 0 to use all (not recommended).', 'max': 2147483647, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/home/auv01/catkin_ws/src/quickmcl/cfg/QuickMCL.cfg', 'name': 'likelihood_num_beams', 'edit_method': '', 'default': 30, 'level': 2, 'min': 0, 'type': 'int'}, {'srcline': 52, 'description': 'Maximum laser distance [m]. Used to divide likelihood_z_rand to create proper probability distribution.', 'max': inf, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/home/auv01/catkin_ws/src/quickmcl/cfg/QuickMCL.cfg', 'name': 'likelihood_max_laser_distance', 'edit_method': '', 'default': 14.0, 'level': 2, 'min': 0.0, 'type': 'double'}], 'type': '', 'id': 2}, {'upper': 'PARTICLE_FILTER', 'lower': 'particle_filter', 'srcline': 124, 'name': 'particle_filter', 'parent': 0, 'srcfile': '/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'cstate': 'true', 'parentname': 'Default', 'class': 'DEFAULT::PARTICLE_FILTER', 'field': 'DEFAULT::particle_filter', 'state': True, 'parentclass': 'DEFAULT', 'groups': [], 'parameters': [{'srcline': 55, 'description': 'Number of particles (min)', 'max': 2147483647, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/home/auv01/catkin_ws/src/quickmcl/cfg/QuickMCL.cfg', 'name': 'particle_filter_particle_count_min', 'edit_method': '', 'default': 100, 'level': 4, 'min': 10, 'type': 'int'}, {'srcline': 56, 'description': 'Number of particles (max)', 'max': 2147483647, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/home/auv01/catkin_ws/src/quickmcl/cfg/QuickMCL.cfg', 'name': 'particle_filter_particle_count_max', 'edit_method': '', 'default': 5000, 'level': 4, 'min': 10, 'type': 'int'}, {'srcline': 57, 'description': 'How often (in filter updates) to resample.', 'max': 2147483647, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/home/auv01/catkin_ws/src/quickmcl/cfg/QuickMCL.cfg', 'name': 'particle_filter_resample_count', 'edit_method': '', 'default': 2, 'level': 4, 'min': 1, 'type': 'int'}, {'srcline': 58, 'description': 'Low pass constant for adaptive/kld.', 'max': 1.0, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/home/auv01/catkin_ws/src/quickmcl/cfg/QuickMCL.cfg', 'name': 'particle_filter_alpha_fast', 'edit_method': '', 'default': 0.1, 'level': 4, 'min': 0.0, 'type': 'double'}, {'srcline': 59, 'description': 'Low pass constant for adaptive/kld.', 'max': 1.0, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/home/auv01/catkin_ws/src/quickmcl/cfg/QuickMCL.cfg', 'name': 'particle_filter_alpha_slow', 'edit_method': '', 'default': 0.001, 'level': 4, 'min': 0.0, 'type': 'double'}, {'srcline': 60, 'description': 'KLD epsilon parameter', 'max': 1.0, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/home/auv01/catkin_ws/src/quickmcl/cfg/QuickMCL.cfg', 'name': 'particle_filter_kld_epsilon', 'edit_method': '', 'default': 0.05, 'level': 4, 'min': 0.0, 'type': 'double'}, {'srcline': 61, 'description': 'KLD z_(1-delta) parameter', 'max': 1.0, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/home/auv01/catkin_ws/src/quickmcl/cfg/QuickMCL.cfg', 'name': 'particle_filter_kld_z', 'edit_method': '', 'default': 0.95, 'level': 4, 'min': 0.0, 'type': 'double'}, {'srcline': 62, 'description': 'KLD bucket resolution x and y [m]', 'max': 1.0, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/home/auv01/catkin_ws/src/quickmcl/cfg/QuickMCL.cfg', 'name': 'space_partitioning_resolution_xy', 'edit_method': '', 'default': 0.5, 'level': 4, 'min': 0.0, 'type': 'double'}, {'srcline': 64, 'description': 'KLD bucket resolution rotation [rad]', 'max': 6.283185307179586, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/home/auv01/catkin_ws/src/quickmcl/cfg/QuickMCL.cfg', 'name': 'space_partitioning_resolution_theta', 'edit_method': '', 'default': 0.17453292519943295, 'level': 4, 'min': 0.0, 'type': 'double'}, {'srcline': 65, 'description': 'Resample algorithm to use', 'max': '', 'cconsttype': 'const char * const', 'ctype': 'std::string', 'srcfile': '/home/auv01/catkin_ws/src/quickmcl/cfg/QuickMCL.cfg', 'name': 'particle_filter_resample_type', 'edit_method': "{'enum_description': 'Enum for resampling types', 'enum': [{'srcline': 18, 'description': 'Low variance sampling', 'srcfile': '/home/auv01/catkin_ws/src/quickmcl/cfg/QuickMCL.cfg', 'cconsttype': 'const char * const', 'value': 'low_variance', 'ctype': 'std::string', 'type': 'str', 'name': 'low_variance'}, {'srcline': 19, 'description': 'Adaptive resampling', 'srcfile': '/home/auv01/catkin_ws/src/quickmcl/cfg/QuickMCL.cfg', 'cconsttype': 'const char * const', 'value': 'adaptive', 'ctype': 'std::string', 'type': 'str', 'name': 'adaptive'}, {'srcline': 20, 'description': 'Adaptive KLD resampling', 'srcfile': '/home/auv01/catkin_ws/src/quickmcl/cfg/QuickMCL.cfg', 'cconsttype': 'const char * const', 'value': 'kld', 'ctype': 'std::string', 'type': 'str', 'name': 'kld'}]}", 'default': 'kld', 'level': 4, 'min': '', 'type': 'str'}], 'type': '', 'id': 3}, {'upper': 'ROS', 'lower': 'ros', 'srcline': 124, 'name': 'ros', 'parent': 0, 'srcfile': '/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'cstate': 'true', 'parentname': 'Default', 'class': 'DEFAULT::ROS', 'field': 'DEFAULT::ros', 'state': True, 'parentclass': 'DEFAULT', 'groups': [], 'parameters': [{'srcline': 68, 'description': 'TF frame to work in, map expected to be in this frame.', 'max': '', 'cconsttype': 'const char * const', 'ctype': 'std::string', 'srcfile': '/home/auv01/catkin_ws/src/quickmcl/cfg/QuickMCL.cfg', 'name': 'fixed_frame', 'edit_method': '', 'default': 'map', 'level': 8, 'min': '', 'type': 'str'}, {'srcline': 69, 'description': 'TF frame to localise.', 'max': '', 'cconsttype': 'const char * const', 'ctype': 'std::string', 'srcfile': '/home/auv01/catkin_ws/src/quickmcl/cfg/QuickMCL.cfg', 'name': 'localised_frame', 'edit_method': '', 'default': 'base_link', 'level': 8, 'min': '', 'type': 'str'}, {'srcline': 70, 'description': 'TF frame to publish transform for (from fixed frame).', 'max': '', 'cconsttype': 'const char * const', 'ctype': 'std::string', 'srcfile': '/home/auv01/catkin_ws/src/quickmcl/cfg/QuickMCL.cfg', 'name': 'odom_frame', 'edit_method': '', 'default': 'odom', 'level': 8, 'min': '', 'type': 'str'}, {'srcline': 75, 'description': 'How often (in seconds) to save the pose to the parameter server. This will be reloaded on startup. Set to 0 to disable saving.', 'max': inf, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/home/auv01/catkin_ws/src/quickmcl/cfg/QuickMCL.cfg', 'name': 'save_pose_period', 'edit_method': '', 'default': 0.0, 'level': 8, 'min': 0.0, 'type': 'double'}, {'srcline': 79, 'description': 'How much to post-date transform, should be similar to delta between scans. Helps rviz get less glitchy and in general indicates that this estimate is valid a bit into the future.', 'max': inf, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/home/auv01/catkin_ws/src/quickmcl/cfg/QuickMCL.cfg', 'name': 'post_date_transform', 'edit_method': '', 'default': 0.1, 'level': 8, 'min': 0.0, 'type': 'double'}, {'srcline': 82, 'description': 'If true, publish filter particles as markers.', 'max': True, 'cconsttype': 'const bool', 'ctype': 'bool', 'srcfile': '/home/auv01/catkin_ws/src/quickmcl/cfg/QuickMCL.cfg', 'name': 'publish_particles', 'edit_method': '', 'default': False, 'level': 8, 'min': False, 'type': 'bool'}], 'type': '', 'id': 4}], 'parameters': [], 'type': '', 'id': 0}

min = {}
max = {}
defaults = {}
level = {}
type = {}
all_level = 0

#def extract_params(config):
#    params = []
#    params.extend(config['parameters'])
#    for group in config['groups']:
#        params.extend(extract_params(group))
#    return params

for param in extract_params(config_description):
    min[param['name']] = param['min']
    max[param['name']] = param['max']
    defaults[param['name']] = param['default']
    level[param['name']] = param['level']
    type[param['name']] = param['type']
    all_level = all_level | param['level']

QuickMCL_LEVEL_MOTION_MODEL = 1
QuickMCL_LEVEL_SENSOR_MODEL = 2
QuickMCL_LEVEL_PARTICLE_FILTER = 4
QuickMCL_LEVEL_ROS = 8
QuickMCL_low_variance = 'low_variance'
QuickMCL_adaptive = 'adaptive'
QuickMCL_kld = 'kld'

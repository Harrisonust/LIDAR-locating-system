\subsubsection parameters ROS parameters

Reads and maintains the following parameters on the ROS server

- \b "~motion_model_alpha_1" : \b [double] Rotation noise from rotation min: 0.0, default: 0.05, max: std::numeric_limits<double>::infinity()
- \b "~motion_model_alpha_2" : \b [double] Rotation noise from translation min: 0.0, default: 0.1, max: std::numeric_limits<double>::infinity()
- \b "~motion_model_alpha_3" : \b [double] Translation noise from translation min: 0.0, default: 0.02, max: std::numeric_limits<double>::infinity()
- \b "~motion_model_alpha_4" : \b [double] Translation noise from rotation min: 0.0, default: 0.05, max: std::numeric_limits<double>::infinity()
- \b "~motion_model_min_trans" : \b [double] Minimum translation for filter to update [m] min: 0.0, default: 0.2, max: std::numeric_limits<double>::infinity()
- \b "~motion_model_min_rot" : \b [double] Minimum rotation for filter to update [rad] min: 0.0, default: 0.523598775598, max: 6.28318530718
- \b "~likelihood_z_hit" : \b [double] Probability weight to assign to 'hit when there is actually something there in the map'. min: 0.0, default: 0.9, max: 1.0
- \b "~likelihood_z_rand" : \b [double] Probability weight to assign to 'random hit even when there is nothing there in the map'. min: 0.0, default: 0.1, max: 1.0
- \b "~likelihood_num_beams" : \b [int] Number of laser beams to use from the scan. This sub-sampling will be done via selecting evenly spaced beams. Set to 0 to use all (not recommended). min: 0, default: 30, max: 2147483647
- \b "~likelihood_max_laser_distance" : \b [double] Maximum laser distance [m]. Used to divide likelihood_z_rand to create proper probability distribution. min: 0.0, default: 14.0, max: std::numeric_limits<double>::infinity()
- \b "~particle_filter_particle_count_min" : \b [int] Number of particles (min) min: 10, default: 100, max: 2147483647
- \b "~particle_filter_particle_count_max" : \b [int] Number of particles (max) min: 10, default: 5000, max: 2147483647
- \b "~particle_filter_resample_count" : \b [int] How often (in filter updates) to resample. min: 1, default: 2, max: 2147483647
- \b "~particle_filter_alpha_fast" : \b [double] Low pass constant for adaptive/kld. min: 0.0, default: 0.1, max: 1.0
- \b "~particle_filter_alpha_slow" : \b [double] Low pass constant for adaptive/kld. min: 0.0, default: 0.001, max: 1.0
- \b "~particle_filter_kld_epsilon" : \b [double] KLD epsilon parameter min: 0.0, default: 0.05, max: 1.0
- \b "~particle_filter_kld_z" : \b [double] KLD z_(1-delta) parameter min: 0.0, default: 0.95, max: 1.0
- \b "~space_partitioning_resolution_xy" : \b [double] KLD bucket resolution x and y [m] min: 0.0, default: 0.5, max: 1.0
- \b "~space_partitioning_resolution_theta" : \b [double] KLD bucket resolution rotation [rad] min: 0.0, default: 0.174532925199, max: 6.28318530718
- \b "~particle_filter_resample_type" : \b [str] Resample algorithm to use min: , default: kld, max: 
- \b "~fixed_frame" : \b [str] TF frame to work in, map expected to be in this frame. min: , default: map, max: 
- \b "~localised_frame" : \b [str] TF frame to localise. min: , default: base_link, max: 
- \b "~odom_frame" : \b [str] TF frame to publish transform for (from fixed frame). min: , default: odom, max: 
- \b "~save_pose_period" : \b [double] How often (in seconds) to save the pose to the parameter server. This will be reloaded on startup. Set to 0 to disable saving. min: 0.0, default: 0.0, max: std::numeric_limits<double>::infinity()
- \b "~post_date_transform" : \b [double] How much to post-date transform, should be similar to delta between scans. Helps rviz get less glitchy and in general indicates that this estimate is valid a bit into the future. min: 0.0, default: 0.1, max: std::numeric_limits<double>::infinity()
- \b "~publish_particles" : \b [bool] If true, publish filter particles as markers. min: False, default: False, max: True

